// Code generated by protoc-gen-go. DO NOT EDIT.
// source: avg.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AvgRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvgRequest) Reset()         { *m = AvgRequest{} }
func (m *AvgRequest) String() string { return proto.CompactTextString(m) }
func (*AvgRequest) ProtoMessage()    {}
func (*AvgRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b889feec73713d05, []int{0}
}

func (m *AvgRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvgRequest.Unmarshal(m, b)
}
func (m *AvgRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvgRequest.Marshal(b, m, deterministic)
}
func (m *AvgRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvgRequest.Merge(m, src)
}
func (m *AvgRequest) XXX_Size() int {
	return xxx_messageInfo_AvgRequest.Size(m)
}
func (m *AvgRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AvgRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AvgRequest proto.InternalMessageInfo

func (m *AvgRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type AvgResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvgResponse) Reset()         { *m = AvgResponse{} }
func (m *AvgResponse) String() string { return proto.CompactTextString(m) }
func (*AvgResponse) ProtoMessage()    {}
func (*AvgResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b889feec73713d05, []int{1}
}

func (m *AvgResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvgResponse.Unmarshal(m, b)
}
func (m *AvgResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvgResponse.Marshal(b, m, deterministic)
}
func (m *AvgResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvgResponse.Merge(m, src)
}
func (m *AvgResponse) XXX_Size() int {
	return xxx_messageInfo_AvgResponse.Size(m)
}
func (m *AvgResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AvgResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AvgResponse proto.InternalMessageInfo

func (m *AvgResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*AvgRequest)(nil), "calculator.AvgRequest")
	proto.RegisterType((*AvgResponse)(nil), "calculator.AvgResponse")
}

func init() {
	proto.RegisterFile("avg.proto", fileDescriptor_b889feec73713d05)
}

var fileDescriptor_b889feec73713d05 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0x4b, 0xd7,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4a, 0x4e, 0xcc, 0x49, 0x2e, 0xcd, 0x49, 0x2c, 0xc9,
	0x2f, 0x52, 0x52, 0xe1, 0xe2, 0x72, 0x2c, 0x4b, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11,
	0x12, 0xe3, 0x62, 0xcb, 0x2b, 0xcd, 0x4d, 0x4a, 0x2d, 0x92, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e,
	0x82, 0xf2, 0x94, 0x54, 0xb9, 0xb8, 0xc1, 0xaa, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x41, 0xca,
	0x8a, 0x52, 0x8b, 0x4b, 0x73, 0x4a, 0xc0, 0xca, 0x18, 0x83, 0xa0, 0x3c, 0x27, 0xe3, 0x28, 0xc3,
	0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0x7d, 0xcf, 0xbc, 0x94, 0xfc, 0xdc,
	0xcc, 0xbc, 0xd2, 0x62, 0xa7, 0xca, 0x92, 0x54, 0xfd, 0xf4, 0x7c, 0xdd, 0xf4, 0xa2, 0x82, 0x64,
	0x7d, 0x84, 0xdd, 0xfa, 0x60, 0xd7, 0x24, 0xb1, 0x81, 0x29, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x1f, 0xe6, 0x5f, 0xfc, 0xa1, 0x00, 0x00, 0x00,
}
